var htmlTemplates=htmlTemplates||{};htmlTemplates["views-graphs.html"]="";var htmlTemplates=htmlTemplates||{};htmlTemplates["views-tiles.html"]='<header class=tile-header>\n	<a class=tile-author>\n		<% if (profile_image_url) { %>\n			<img class=tile-author-avatar src="<%=profile_image_url%>" alt="<%=name%>\'s avatar">\n		<% } %>\n		<strong class=tile-author-name><%=name%></strong>\n	</a>\n	<div class=tile-pinned>Pinned</div>\n	<div class=tile-logo></div>\n</header>\n<div class=tile-content>\n	<% if (media_url) { %>\n		<img class=tile-media src="<%=media_url%>" alt="<%=text%>">\n	<% } else { %>\n		<%=text%>\n	<% } %>\n</div>\n<footer class=tile-footer>\n	<a target=_blank href="<%=link%>">view post</a>\n</footer>\n',function(){var t={};this.tmpl=function n(e,i){var o=/\W/.test(e)?new Function("obj","var p=[],print=function(){p.push.apply(p,arguments);};with(obj){p.push('"+e.replace(/[\r\t\n]/g," ").split("<%").join("	").replace(/((^|%>)[^\t]*)'/g,"$1\r").replace(/\t=(.*?)%>/g,"',$1,'").split("	").join("');").split("%>").join("p.push('").split("\r").join("\\'")+"');}return p.join('');"):t[e]=t[e]||n(document.getElementById(e).innerHTML);return i?o(i):o}}(),!function(){function t(t,n,e){function i(){Object.observe(t[n],function(t){t.forEach(function(t){e(t.object)})})}i(),Object.observe(t,function(t){t.forEach(function(t){console.log(t),t.name===n&&(i(),e(t.object[n]))})})}function n(n){function e(t){return s=s.data(t),s.enter().append("div").style("opacity",0),s.attr("class",function(t){return"tile tile-"+t.type+(t.media_url?" tile-has-media":"")}).html(function(t){return i(o(t))}).transition().duration(1e3).style("opacity",1),s.exit().remove(),this}var i=tmpl(htmlTemplates["views-tiles.html"]),s=d3.select(n).selectAll("div"),l=null;return e.source=function(n){return arguments.length?(l=n,t(l,"posts",e),e):l},e}function e(t){return this.posts=[],d3.json(t+"/posts",function(t,n){this.posts=n.posts}.bind(this)),console.log(this),this}function i(t){this.posts=[];var n=[],e=io.connect(t,{"force new connection":!0}),i=e.socket;return i.on("connect",function(){e.emit("ready","default"),console.log("ready")}),i.on("connect_failed",function(){console.error("connection failed")}),i.on("error",function(){console.error("connection error")}),e.on("recvData",function(t){var e=JSON.parse(t);(n.length<20||"new"==e.flag)&&n.push(e)}.bind(this)),setInterval(function(){this.posts!=n&&(this.posts=n)}.bind(this),500),this}function o(t){return t.profile_image_url=t.profile_image_url||null,t.media_url=t.media_url||null,t}this.nio={json:e,tiles:n,socketio:i}}();
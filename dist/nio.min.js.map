{"version":3,"sources":["/Users/lcurry/github/neutralio/nio.js/nio.ts"],"names":["JSONSource","JSONSource.constructor","JSONSource.fetch","JSONSource.start","JSONSource.resume","SocketIOSource","SocketIOSource.resume","SocketIOSource.constructor","SocketIOSource.start","SocketIOSource.pause","MuxSource","MuxSource.constructor","MuxSource.start","MuxSource.pause","MuxSource.resume","TestStream.constructor","TestStream","Collection","Collection.constructor","Collection.write","Collection.transform","Collection.sort"],"mappings":"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","file":"nio.min.js","sourcesContent":["/// <reference path=\"../typings/d3/d3.d.ts\" />\n/// <reference path=\"../typings/socket.io/socket.io.d.ts\" />\n/// <reference path=\"../typings/lodash/lodash.d.ts\" />\nimport stream = require('./stream')\nimport utils = require('./utils')\n\ninterface Source {\n\tstart(path: string): void\n\tpause(): void\n\tresume(): void\n}\n\nclass JSONSource extends stream.Stream implements Source {\n\tprivate host: string\n\tprivate path: string\n\tprivate pollRate: number\n\tprivate interval: number\n\n\tconstructor(host: string, pollRate: number = 20 * 1000) {\n\t\tthis.host = host\n\t\tthis.pollRate = pollRate\n\t\tsuper()\n\t}\n\n\tfetch(path: string): void {\n\t\tthis.path = path\n\t\tutils.json(this.host + '/' + path, (error, json) => {\n\t\t\tvar data = json[path]\n\t\t\tif (data && _.isArray(data))\n\t\t\t\tfor (var i=data.length; i--;)\n\t\t\t\t\tthis.push(data[i])\n\t\t\telse\n\t\t\t\tthis.push(data)\n\t\t})\n\t}\n\n\tstart(path: string): void {\n\t\tthis.interval = setInterval(() => this.fetch(path), this.pollRate)\n\t}\n\n\tpause(): void {\n\t\tclearTimeout(this.interval)\n\t}\n\n\tresume(): void {\n\t\tthis.start(this.path)\n\t}\n}\n\nclass SocketIOSource extends stream.Stream implements Source {\n\tws: Socket\n\thost: string\n\tconstructor(host: string) {\n\t\tthis.host = host\n\t\tsuper()\n\t}\n\tstart(path: string): void {\n\t\tvar ws = this.ws = io.connect(this.host)\n\t\tvar sock = ws.socket\n\t\tpath = path == 'posts' ? 'default' : path\n\t\tsock.on('connect', () => ws.emit('ready', path))\n\t\tsock.on('connect_failed', () => console.error('connection failed'))\n\t\tsock.on('error', () => console.error('connection error'))\n\t\tthis.resume()\n\t}\n\tpause(): void {\n\t\tthis.ws.on('recvData', (data) => null)\n\t}\n\tresume(): void {\n\t\tthis.ws.on('recvData', (data) => this.push(JSON.parse(data)))\n\t}\n}\n\nclass MuxSource extends stream.Stream implements Source {\n\tsources: Source[]\n\tconstructor(...sources: Source[]) {\n\t\tthis.sources = sources\n\t\tsuper()\n\t}\n\tstart(path: string): void {\n\t\tthis.sources.forEach(src => src.start(path))\n\t}\n\tpause(): void {\n\t\tthis.sources.forEach(src => src.pause())\n\t}\n\tresume(): void {\n\t\tthis.sources.forEach(src => src.resume())\n\t}\n}\n\nclass TestStream extends stream.Stream {\n\tconstructor(message: string, rate: number = 1000) {\n\t\tsetInterval(() => this.push(message), rate)\n\t\tsuper()\n\t}\n}\n\nclass Collection extends stream.Stream {\n\tmodelFn: Function\n\tprivate data: any[]\n\tprivate transforms: Function[]\n\tprivate transformFn: Function\n\n\tconstructor(modelFn: Function) {\n\t\tthis.modelFn = modelFn\n\t\tthis.data = []\n\t\tthis.transforms = []\n\t\tthis.transformFn = null\n\t\tsuper()\n\t}\n\n\twrite(chunk: any): void {\n\t\tvar model = this.modelFn(chunk)\n\t\tif (!_.any(this.data, m => model.getID() == m.getID())) {\n\t\t\tthis.data.push(model)\n\t\t\tif (this.transformFn)\n\t\t\t\tthis.data = this.transformFn(this.data)\n\t\t\tthis.push(this.data)\n\t\t}\n\t}\n\n\ttransform(fn: Function): Collection {\n\t\tthis.transforms.push(fn)\n\t\tthis.transformFn = this.transforms[0]\n\t\treturn this\n\t}\n\n\tsort(prop: string, reverse: boolean): Collection {\n\t\tthis.transform((data) => {\n\t\t\tvar sorted = _.sortBy(data, d => d[prop])\n\t\t\treturn reverse ? sorted.reverse() : sorted\n\t\t})\n\t\treturn this\n\t}\n}\n\nimport tiles = require('./tiles/tiles')\n\nwindow['nio'] = {\n\tjson: (host: string, pollRate?: number): JSONSource => {\n\t\treturn new JSONSource(host, pollRate)\n\t},\n\tsocketio: (host: string): SocketIOSource => {\n\t\treturn new SocketIOSource(host)\n\t},\n\tlogStream: (): stream.Stream => {\n\t\treturn stream.make(function (chunk) {\n\t\t\tconsole.log(chunk)\n\t\t\tthis.push(chunk)\n\t\t})\n\t},\n\tcollection: (modelFn: Function): Collection => {\n\t\treturn new Collection(modelFn)\n\t},\n\ttiles: (selector: string): tiles.TileView => {\n\t\treturn new tiles.TileView(selector)\n\t}\n}\n"],"sourceRoot":"/source/"}